function C(S,k={}){const q=[];if(S instanceof URL)throw new TypeError("Watch URLs are not supported yet");else if(Buffer.isBuffer(S))S=S.toString();else if(typeof S!=="string")throw new TypeError("Expected path to be a string or Buffer");let E=null;if(typeof k==="string")k={encoding:k};return B.watch(S,k||{},(z,x)=>{if(q.push({eventType:z,filename:x}),E){const A=E;E=null,A()}}),{async*[Symbol.asyncIterator](){let z=!1;while(!z){while(q.length){let x=q.shift();if(x.eventType==="close"){z=!0;break}if(x.eventType==="error")throw z=!0,x.filename;yield x}await new Promise((x)=>E=x)}}}}var B=Bun.fs(),F="::bunternal::",R={[F]:(S)=>{var k={[F]:function(q,E,z){var x;try{x=S.apply(B,z),z=void 0}catch(A){z=void 0,E(A);return}q(x)}}[F];return async function(...q){return await new Promise((E,z)=>{process.nextTick(k,E,z,q)})}}}[F],W=R(B.accessSync),D=R(B.appendFileSync),g=R(B.closeSync),G=R(B.copyFileSync),h=R(B.existsSync),H=R(B.chownSync),j=R(B.chmodSync),I=R(B.fchmodSync),w=R(B.fchownSync),J=R(B.fstatSync),b=R(B.fsyncSync),K=R(B.ftruncateSync),u=R(B.futimesSync),L=R(B.lchmodSync),d=R(B.lchownSync),M=R(B.linkSync),c=R(B.lstatSync),N=R(B.mkdirSync),v=R(B.mkdtempSync),O=R(B.openSync),a=R(B.readSync),P=R(B.writeSync),y=R(B.readdirSync),Q=R(B.readFileSync),l=R(B.writeFileSync),U=R(B.readlinkSync),p=R(B.realpathSync),V=R(B.renameSync),m=R(B.statSync),X=R(B.symlinkSync),n=R(B.truncateSync),Y=R(B.unlinkSync),t=R(B.utimesSync),Z=R(B.lutimesSync),o=R(B.rmSync),_=R(B.rmdirSync),r=(S,k,q)=>{return new Promise((E,z)=>{try{var x=B.writevSync(S,k,q)}catch(A){z(A);return}E({bytesWritten:x,buffers:k})})},$=(S,k,q)=>{return new Promise((E,z)=>{try{var x=B.readvSync(S,k,q)}catch(A){z(A);return}E({bytesRead:x,buffers:k})})},i={access:W,appendFile:D,close:g,copyFile:G,exists:h,chown:H,chmod:j,fchmod:I,fchown:w,fstat:J,fsync:b,ftruncate:K,futimes:u,lchmod:L,lchown:d,link:M,lstat:c,mkdir:N,mkdtemp:v,open:O,read:a,write:P,readdir:y,readFile:Q,writeFile:l,readlink:U,realpath:p,rename:V,stat:m,symlink:X,truncate:n,unlink:Y,utimes:t,lutimes:Z,rm:o,rmdir:_,watch:C,writev:r,readv:$,constants,[Symbol.for("CommonJS")]:0};export{r as writev,l as writeFile,P as write,C as watch,t as utimes,Y as unlink,n as truncate,X as symlink,m as stat,_ as rmdir,o as rm,V as rename,p as realpath,$ as readv,U as readlink,y as readdir,Q as readFile,a as read,O as open,v as mkdtemp,N as mkdir,Z as lutimes,c as lstat,M as link,d as lchown,L as lchmod,u as futimes,K as ftruncate,b as fsync,J as fstat,w as fchown,I as fchmod,h as exists,i as default,G as copyFile,g as close,H as chown,j as chmod,D as appendFile,W as access};
